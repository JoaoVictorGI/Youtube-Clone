{
    "$schema": "https://biomejs.dev/schemas/1.8.3/schema.json",
    "organizeImports": {
      "enabled": true
    },
    "files": {
      "ignoreUnknown": true,
      "ignore": [
        "**/dist",
        "**/node_modules",
        "**/database",
        "**/build",
        "**/coverage",
        "**/styled-system"
      ]
    },
    "formatter": {
      "enabled": true,
      "formatWithErrors": false,
      "indentStyle": "space",
      "indentWidth": 2,
      "lineEnding": "lf",
      "lineWidth": 80,
      "attributePosition": "auto"
    },
    "linter": {
      "enabled": true,
      "rules": {
        "recommended": true,
        "complexity": {
          "noBannedTypes": "error",
          "noExtraBooleanCast": "error",
          "noMultipleSpacesInRegularExpressionLiterals": "error",
          "noUselessCatch": "error",
          "noUselessTypeConstraint": "error",
          "noWith": "error"
        },
        "correctness": {
          "noConstAssign": "error",
          "noConstantCondition": "error",
          "noEmptyCharacterClassInRegex": "error",
          "noEmptyPattern": "error",
          "noGlobalObjectCalls": "error",
          "noInnerDeclarations": "error",
          "noInvalidConstructorSuper": "error",
          "noNewSymbol": "error",
          "noNonoctalDecimalEscape": "error",
          "noPrecisionLoss": "error",
          "noSelfAssign": "error",
          "noSetterReturn": "error",
          "noSwitchDeclarations": "error",
          "noUndeclaredVariables": "error",
          "noUnreachable": "error",
          "noUnreachableSuper": "error",
          "noUnsafeFinally": "error",
          "noUnsafeOptionalChaining": "error",
          "noUnusedLabels": "error",
          "noUnusedVariables": "error",
          "useArrayLiterals": "off",
          "useExhaustiveDependencies": "warn",
          "useHookAtTopLevel": "error",
          "useIsNan": "error",
          "useValidForDirection": "error",
          "useYield": "error"
        },
        "style": {
          "noNamespace": "error",
          "useAsConstAssertion": "error",
          "useBlockStatements": "off"
        },
        "suspicious": {
          "noAsyncPromiseExecutor": "error",
          "noCatchAssign": "error",
          "noClassAssign": "error",
          "noCompareNegZero": "error",
          "noControlCharactersInRegex": "error",
          "noDebugger": "error",
          "noDuplicateCase": "error",
          "noDuplicateClassMembers": "error",
          "noDuplicateObjectKeys": "error",
          "noDuplicateParameters": "error",
          "noEmptyBlockStatements": "error",
          "noExplicitAny": "error",
          "noExtraNonNullAssertion": "error",
          "noFallthroughSwitchClause": "error",
          "noFunctionAssign": "error",
          "noGlobalAssign": "error",
          "noImportAssign": "error",
          "noMisleadingCharacterClass": "error",
          "noMisleadingInstantiator": "error",
          "noPrototypeBuiltins": "error",
          "noRedeclare": "error",
          "noShadowRestrictedNames": "error",
          "noUnsafeDeclarationMerging": "error",
          "noUnsafeNegation": "error",
          "useGetterReturn": "error",
          "useValidTypeof": "error"
        },
        "a11y": {
          "useKeyWithClickEvents": "off"
        }
      },
      "ignore": ["**/dist", "**/.eslintrc.cjs"]
    },
    "javascript": {
      "formatter": {
        "jsxQuoteStyle": "double",
        "quoteProperties": "asNeeded",
        "trailingCommas": "es5",
        "semicolons": "asNeeded",
        "arrowParentheses": "always",
        "bracketSpacing": true,
        "bracketSameLine": false,
        "quoteStyle": "double",
        "attributePosition": "auto"
      }
    },
    "overrides": [
      {
        "include": ["client/**/*"],
        "javascript": {
          "formatter": {
            "trailingCommas": "all"
          }
        },
        "linter": {
          "rules": {
            "correctness": {
              "noUnusedImports": "warn"
            }
          }
        }
      },
      {
        "include": ["server/**/*"],
        "linter": {
          "rules": {
            "complexity": {
              "noWith": "error"
            },
            "suspicious": {
              "noExplicitAny": "off"
            },
            "style": {
              "noArguments": "error",
              "noVar": "error",
              "useConst": "error"
            }
          }
        }
      }
    ]
  }
  